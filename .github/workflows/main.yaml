name: Main workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
jobs:
  Build:
    runs-on: ubuntu-latest
    container:
      image: node:latest
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: npm install
        
      - name: Run unit tests
        run: npm test
        
      - name: Upload repo
        uses: actions/upload-artifact@v4
        with:
          name: code
          path: .
  Linting:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
          
      - name: Run linting
        uses: super-linter/super-linter/slim@v5
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true
  Snyk:
    runs-on: ubuntu-latest
    needs: [Linting]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: npm install -g snyk
      
      - run: snyk test
    env:
          DEFAULT_BRANCH: main
          SNYK_TOKEN: ${{ secrets.SNYK }}
          DISABLE_ERRORS: true
          
  Build-docker-image:
    name: Build and Push Docker Image
    needs: [Snyk]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build Docker Image
        run: docker build -t slavitriples01/devops-project:latest .
        
      - name: Push Docker Image
        run: docker push slavitriples01/devops-project:latest

  Trivy:
    runs-on: ubuntu-latest
    needs: [Build-docker-image]
    steps:
      - uses: actions/checkout@v3
      - name: Run Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: slavitriples01/devops-project:latest 
          format: 'table'
          exit-code: 0
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          
  DeployToMiniKube:
    runs-on: ubuntu-latest
    needs: [Build-docker-image,Trivy]
    name: DeployToMiniKube
    steps:
      - uses: actions/checkout@v4    
      
      - name: Start Minikube
        uses: medyagh/setup-minikube@latest
        with:
          minikube-version: v1.34.0
          kubernetes-version: v1.31.0
          driver: docker  

      - name: Deploy to Minikube
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Wait for Pods to be Ready
        run: |
            kubectl wait --for=condition=ready pod -l app=devops-project --timeout=120s 
            
      - name: Verify Deployment
        run: kubectl get all
    
